[{"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/index.tsx":"1","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/graphql/cache.ts":"2","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/App.tsx":"3","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/Searchbar.tsx":"4","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/Home.tsx":"5","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/SearchResults.tsx":"6","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/graphql/queries/index.ts":"7","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/graphql/fragments/index.ts":"8","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/SignUp.tsx":"9","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/SignUpForm.tsx":"10","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/graphql/mutations/index.ts":"11","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/Login.tsx":"12","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/LoginForm.tsx":"13","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/NavBar.tsx":"14","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/theme.ts":"15","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/SingleGame/index.tsx":"16","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/graphql/typedefs/index.ts":"17","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/SingleGame/CollectionButton.tsx":"18"},{"size":1207,"mtime":1609688761180,"results":"19","hashOfConfig":"20"},{"size":997,"mtime":1609688762578,"results":"21","hashOfConfig":"20"},{"size":1010,"mtime":1608857849742,"results":"22","hashOfConfig":"20"},{"size":787,"mtime":1608756251556,"results":"23","hashOfConfig":"20"},{"size":1005,"mtime":1609115862469,"results":"24","hashOfConfig":"20"},{"size":3192,"mtime":1608862958895,"results":"25","hashOfConfig":"20"},{"size":1432,"mtime":1609872052078,"results":"26","hashOfConfig":"20"},{"size":1875,"mtime":1609872022982,"results":"27","hashOfConfig":"20"},{"size":2590,"mtime":1608784183937,"results":"28","hashOfConfig":"20"},{"size":1183,"mtime":1608784121474,"results":"29","hashOfConfig":"20"},{"size":734,"mtime":1609689565219,"results":"30","hashOfConfig":"20"},{"size":2322,"mtime":1608818432760,"results":"31","hashOfConfig":"20"},{"size":1029,"mtime":1608783982896,"results":"32","hashOfConfig":"20"},{"size":1849,"mtime":1608818899124,"results":"33","hashOfConfig":"20"},{"size":351,"mtime":1608769943159,"results":"34","hashOfConfig":"20"},{"size":1760,"mtime":1609941969433,"results":"35","hashOfConfig":"20"},{"size":1049,"mtime":1609689573609,"results":"36","hashOfConfig":"20"},{"size":4829,"mtime":1609950805609,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"p3r312",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/index.tsx",[],[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/graphql/cache.ts",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/App.tsx",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/Searchbar.tsx",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/Home.tsx",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/SearchResults.tsx",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/graphql/queries/index.ts",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/graphql/fragments/index.ts",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/SignUp.tsx",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/SignUpForm.tsx",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/graphql/mutations/index.ts",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/Login.tsx",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/LoginForm.tsx",[],[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/NavBar.tsx",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/theme.ts",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/SingleGame/index.tsx",["78"],"import { useQuery } from '@apollo/client'\r\nimport { CircularProgress, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { GET_SINGLE_GAME, ME } from '../../graphql/queries'\r\nimport { SingleGameData, SingleGameVars, User } from '../../types'\r\nimport CollectionButton from './CollectionButton'\r\n\r\nexport interface MeData {\r\n  me: User\r\n  loggedIn: boolean\r\n}\r\n\r\n\r\nconst SingleGame: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>()\r\n  const numberId = Number(id)\r\n  const history = useHistory()\r\n  const { loading, data } = useQuery<SingleGameData, SingleGameVars>(GET_SINGLE_GAME, {\r\n    variables: { id: numberId }\r\n  })\r\n  const { data: meData, loading: meLoading } = useQuery<MeData, boolean>(ME, {\r\n    pollInterval: 1000,\r\n  })\r\n  if (!loading && !data) {\r\n    return <Typography variant='h2'>Something went wrong!</Typography>\r\n  }\r\n\r\n  const game = data?.singleGame\r\n  console.log(\"game is\", game)\r\n  console.log(\"I am\", meData)\r\n  if (meLoading || loading) {\r\n    return (\r\n      <CircularProgress size='10rem' />\r\n    )\r\n  }\r\n  if (game) {\r\n    return (\r\n      <>\r\n        <Typography variant='h1'>\r\n          {game?.name}\r\n        </Typography>\r\n        <img width='600px' src={game?.background_image} />\r\n        <div>\r\n          {game.metacritic}\r\n        </div>\r\n        <div>\r\n          {game.released}\r\n        </div>\r\n        <div>\r\n          {game.description}\r\n        </div>\r\n        {meData?.me && <CollectionButton game={game} username={meData?.me?.username} libraryId={meData?.me?.library} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Typography variant='h1'>\r\n      No game was found...\r\n    </Typography>\r\n  )\r\n\r\n}\r\n\r\nexport default SingleGame","/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/graphql/typedefs/index.ts",[],"/mnt/c/Users/Tynan/git-dev/game-recommender/game-recommender-frontend/src/components/SingleGame/CollectionButton.tsx",["79","80"],"import { useMutation, useQuery } from '@apollo/client';\r\nimport { Button, CircularProgress, Menu, MenuItem, Typography } from '@material-ui/core'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { ADD_GAME } from '../../graphql/mutations';\r\nimport { GET_GAME_OBJECTID, GET_LIBRARY } from '../../graphql/queries';\r\nimport { GameCategory, SingleGame, MyLibraryData, GameObjectID } from '../../types'\r\n\r\ninterface ButtonProps {\r\n  game: SingleGame\r\n  username: string\r\n  libraryId: string\r\n}\r\ninterface AddGameVars {\r\n  username: string\r\n  gameCategory: GameCategory\r\n  gameId: number\r\n}\r\ninterface LibraryVars {\r\n  libraryId: string\r\n}\r\ninterface ObjectIdVars {\r\n  gameRawgId: number\r\n}\r\ninterface ObjectIdData {\r\n  fetchGameObjectId: string\r\n}\r\n\r\nconst inCollection = (id: string, gameList: GameObjectID[]): boolean => {\r\n  console.log(id)\r\n  const gameArray: string[] = gameList.map(game => game['_id'])\r\n  console.log(\"gameArray is\", gameArray)\r\n  console.log(gameArray.includes(id))\r\n  return gameArray.includes(id)\r\n}\r\n\r\nconst CollectionButton: React.FC<ButtonProps> = ({ game, username, libraryId }) => {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [addGame, { loading, data }] = useMutation<AddGameVars>(ADD_GAME)\r\n  const { data: libraryData, loading: libraryLoading } = useQuery<MyLibraryData, LibraryVars>(GET_LIBRARY, {\r\n    variables: { libraryId },\r\n  })\r\n  const { data: objectIdData } = useQuery<ObjectIdData, ObjectIdVars>(GET_GAME_OBJECTID, {\r\n    variables: { gameRawgId: Number(game.id) }\r\n  })\r\n\r\n  const [inPlaying, setInPlaying] = useState<boolean>(false)\r\n  const [inWishlist, setInWishlist] = useState<boolean>(false)\r\n  const [inCompleted, setInCompleted] = useState<boolean>(false)\r\n  const [inUnfinished, setInUnfinished] = useState<boolean>(false)\r\n  const [inNotStarted, setInNotStarted] = useState<boolean>(false)\r\n  const [alreadyAdded, setAlreadyAdded] = useState<boolean>(true)\r\n\r\n  useEffect(() => {\r\n    if (libraryData?.myLibrary?.games && objectIdData?.fetchGameObjectId) {\r\n      console.log(\"useEffect FIRED\")\r\n      const library = libraryData.myLibrary.games\r\n      const objectId = objectIdData.fetchGameObjectId\r\n      console.log(library)\r\n      console.log(objectIdData)\r\n      if (inCollection(objectId, library.playing)) {\r\n        setInPlaying(true)\r\n      } else if (inCollection(objectId, library.wishlist)) {\r\n        setInWishlist(true)\r\n      } else if (inCollection(objectId, library.completed)) {\r\n        setInCompleted(true)\r\n      } else if (inCollection(objectId, library.unfinished)) {\r\n        setInUnfinished(true)\r\n      } else if (inCollection(objectId, library.notStarted)) {\r\n        setInNotStarted(true)\r\n      } else {\r\n        console.log(\"Nothing set.\")\r\n        setAlreadyAdded(false)\r\n      }\r\n    }\r\n  }, [libraryData, objectIdData])\r\n\r\n\r\n\r\n\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget)\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  };\r\n\r\n  const handleAddGame = async (gameCategory: string): Promise<void> => {\r\n    try {\r\n      const result = await addGame({\r\n        variables: {\r\n          username,\r\n          gameCategory,\r\n          gameId: Number(game.id),\r\n        },\r\n        refetchQueries: [\r\n          {\r\n            query: GET_LIBRARY,\r\n            variables: { libraryId },\r\n          }\r\n        ]\r\n      })\r\n      console.log(result)\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n    setTimeout(() => {\r\n      handleClose()\r\n    }, 2000)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        Add to collection\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem\r\n          onClick={() => handleAddGame('playing')}\r\n          disabled={inPlaying}>\r\n          Playing\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => handleAddGame('completed')}\r\n          disabled={inCompleted}>\r\n          Completed\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => handleAddGame('not started')}\r\n          disabled={inNotStarted}>\r\n          Not started\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => handleAddGame('unfinished')}\r\n          disabled={inUnfinished}>\r\n          Unfinished\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => handleAddGame('wishlist')}\r\n          disabled={inWishlist}>\r\n          Wishlist\r\n        </MenuItem>\r\n        {loading && <CircularProgress />}\r\n        {data && <Typography>{game.name} added to collection.</Typography>}\r\n      </Menu>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CollectionButton",{"ruleId":"81","severity":1,"message":"82","line":18,"column":9,"nodeType":"83","messageId":"84","endLine":18,"endColumn":16},{"ruleId":"81","severity":1,"message":"85","line":39,"column":39,"nodeType":"83","messageId":"84","endLine":39,"endColumn":53},{"ruleId":"81","severity":1,"message":"86","line":51,"column":10,"nodeType":"83","messageId":"84","endLine":51,"endColumn":22},"@typescript-eslint/no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'libraryLoading' is assigned a value but never used.","'alreadyAdded' is assigned a value but never used."]