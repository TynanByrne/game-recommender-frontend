[{"/Users/test/Documents/coding/game-recommender-frontend/src/index.tsx":"1","/Users/test/Documents/coding/game-recommender-frontend/src/theme.ts":"2","/Users/test/Documents/coding/game-recommender-frontend/src/graphql/cache.ts":"3","/Users/test/Documents/coding/game-recommender-frontend/src/App.tsx":"4","/Users/test/Documents/coding/game-recommender-frontend/src/graphql/typedefs/index.ts":"5","/Users/test/Documents/coding/game-recommender-frontend/src/components/Login.tsx":"6","/Users/test/Documents/coding/game-recommender-frontend/src/components/NavBar.tsx":"7","/Users/test/Documents/coding/game-recommender-frontend/src/components/SearchResults.tsx":"8","/Users/test/Documents/coding/game-recommender-frontend/src/components/Home.tsx":"9","/Users/test/Documents/coding/game-recommender-frontend/src/components/SignUp.tsx":"10","/Users/test/Documents/coding/game-recommender-frontend/src/components/GameLibrary/index.tsx":"11","/Users/test/Documents/coding/game-recommender-frontend/src/components/SingleGame/index.tsx":"12","/Users/test/Documents/coding/game-recommender-frontend/src/components/SinglePost/index.tsx":"13","/Users/test/Documents/coding/game-recommender-frontend/src/components/SignUpForm.tsx":"14","/Users/test/Documents/coding/game-recommender-frontend/src/graphql/mutations/index.ts":"15","/Users/test/Documents/coding/game-recommender-frontend/src/components/SingleGame/CollectionButtons.tsx":"16","/Users/test/Documents/coding/game-recommender-frontend/src/components/GameLibrary/LibraryList.tsx":"17","/Users/test/Documents/coding/game-recommender-frontend/src/components/GameLibrary/CategoryFilters.tsx":"18","/Users/test/Documents/coding/game-recommender-frontend/src/components/PostFeed/index.tsx":"19","/Users/test/Documents/coding/game-recommender-frontend/src/graphql/queries/index.ts":"20","/Users/test/Documents/coding/game-recommender-frontend/src/components/SingleGame/RemoveGameButton.tsx":"21","/Users/test/Documents/coding/game-recommender-frontend/src/components/SingleGame/AddGameButton.tsx":"22","/Users/test/Documents/coding/game-recommender-frontend/src/components/GameLibrary/LibraryItem.tsx":"23","/Users/test/Documents/coding/game-recommender-frontend/src/components/PostFeed/PostList.tsx":"24","/Users/test/Documents/coding/game-recommender-frontend/src/components/PostFeed/NewPost.tsx":"25","/Users/test/Documents/coding/game-recommender-frontend/src/graphql/fragments/index.ts":"26","/Users/test/Documents/coding/game-recommender-frontend/src/components/PostFeed/NewPostForm.tsx":"27","/Users/test/Documents/coding/game-recommender-frontend/src/components/PostFeed/PostItem.tsx":"28","/Users/test/Documents/coding/game-recommender-frontend/src/components/SinglePost/FullPost.tsx":"29","/Users/test/Documents/coding/game-recommender-frontend/src/components/Searchbar.tsx":"30","/Users/test/Documents/coding/game-recommender-frontend/src/components/LoginForm.tsx":"31","/Users/test/Documents/coding/game-recommender-frontend/src/components/SinglePost/NewRecommendation.tsx":"32","/Users/test/Documents/coding/game-recommender-frontend/src/components/SinglePost/NewRecommendationForm.tsx":"33","/Users/test/Documents/coding/game-recommender-frontend/src/components/SinglePost/RecommendationItem.tsx":"34"},{"size":1207,"mtime":1613578564124,"results":"35","hashOfConfig":"36"},{"size":548,"mtime":1613578564125,"results":"37","hashOfConfig":"36"},{"size":997,"mtime":1613578564123,"results":"38","hashOfConfig":"36"},{"size":1279,"mtime":1613591764115,"results":"39","hashOfConfig":"36"},{"size":1049,"mtime":1613578564124,"results":"40","hashOfConfig":"36"},{"size":2322,"mtime":1613578564119,"results":"41","hashOfConfig":"36"},{"size":2071,"mtime":1613578564119,"results":"42","hashOfConfig":"36"},{"size":3192,"mtime":1613578564120,"results":"43","hashOfConfig":"36"},{"size":1060,"mtime":1613578564118,"results":"44","hashOfConfig":"36"},{"size":2591,"mtime":1613578564121,"results":"45","hashOfConfig":"36"},{"size":1735,"mtime":1613578564118,"results":"46","hashOfConfig":"36"},{"size":1762,"mtime":1613578564122,"results":"47","hashOfConfig":"36"},{"size":882,"mtime":1613591764117,"results":"48","hashOfConfig":"36"},{"size":1183,"mtime":1613578564121,"results":"49","hashOfConfig":"36"},{"size":2036,"mtime":1613600164568,"results":"50","hashOfConfig":"36"},{"size":3921,"mtime":1613578564122,"results":"51","hashOfConfig":"36"},{"size":2331,"mtime":1613578564118,"results":"52","hashOfConfig":"36"},{"size":2321,"mtime":1613578564118,"results":"53","hashOfConfig":"36"},{"size":247,"mtime":1613578564120,"results":"54","hashOfConfig":"36"},{"size":1899,"mtime":1613591764118,"results":"55","hashOfConfig":"36"},{"size":2509,"mtime":1613578564122,"results":"56","hashOfConfig":"36"},{"size":4171,"mtime":1613578564121,"results":"57","hashOfConfig":"36"},{"size":4540,"mtime":1613578564118,"results":"58","hashOfConfig":"36"},{"size":1287,"mtime":1613578564120,"results":"59","hashOfConfig":"36"},{"size":2386,"mtime":1613600160925,"results":"60","hashOfConfig":"36"},{"size":2318,"mtime":1613602569263,"results":"61","hashOfConfig":"36"},{"size":3650,"mtime":1613600805125,"results":"62","hashOfConfig":"36"},{"size":3021,"mtime":1613591764116,"results":"63","hashOfConfig":"36"},{"size":2790,"mtime":1613602789560,"results":"64","hashOfConfig":"36"},{"size":787,"mtime":1613578564121,"results":"65","hashOfConfig":"36"},{"size":1029,"mtime":1613578564119,"results":"66","hashOfConfig":"36"},{"size":2567,"mtime":1613600802884,"results":"67","hashOfConfig":"36"},{"size":2548,"mtime":1613603189614,"results":"68","hashOfConfig":"36"},{"size":1743,"mtime":1613603063114,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1wzoxf1",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/test/Documents/coding/game-recommender-frontend/src/index.tsx",[],[],"/Users/test/Documents/coding/game-recommender-frontend/src/theme.ts",[],"/Users/test/Documents/coding/game-recommender-frontend/src/graphql/cache.ts",[],"/Users/test/Documents/coding/game-recommender-frontend/src/App.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/graphql/typedefs/index.ts",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/Login.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/NavBar.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/SearchResults.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/Home.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/SignUp.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/GameLibrary/index.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/SingleGame/index.tsx",["142"],"import { useQuery } from '@apollo/client'\r\nimport { CircularProgress, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useHistory, useParams } from 'react-router'\r\nimport { GET_SINGLE_GAME, ME } from '../../graphql/queries'\r\nimport { SingleGameData, SingleGameVars, User } from '../../types'\r\nimport CollectionButtons from './CollectionButtons'\r\n\r\nexport interface MeData {\r\n  me: User\r\n  loggedIn: boolean\r\n}\r\n\r\n\r\nconst SingleGame: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>()\r\n  const numberId = Number(id)\r\n  const history = useHistory()\r\n  const { loading, data } = useQuery<SingleGameData, SingleGameVars>(GET_SINGLE_GAME, {\r\n    variables: { id: numberId }\r\n  })\r\n  const { data: meData, loading: meLoading } = useQuery<MeData, boolean>(ME, {\r\n    pollInterval: 1000,\r\n  })\r\n  if (!loading && !data) {\r\n    return <Typography variant='h2'>Something went wrong!</Typography>\r\n  }\r\n\r\n  const game = data?.singleGame\r\n  console.log(\"game is\", game)\r\n  console.log(\"I am\", meData)\r\n  if (meLoading || loading) {\r\n    return (\r\n      <CircularProgress size='10rem' />\r\n    )\r\n  }\r\n  if (game) {\r\n    return (\r\n      <>\r\n        <Typography variant='h1'>\r\n          {game?.name}\r\n        </Typography>\r\n        <img width='600px' src={game?.background_image} />\r\n        <div>\r\n          {game.metacritic}\r\n        </div>\r\n        <div>\r\n          {game.released}\r\n        </div>\r\n        <div>\r\n          {game.description}\r\n        </div>\r\n        {meData?.me && <CollectionButtons game={game} username={meData.me?.username} libraryId={meData?.me?.library} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Typography variant='h1'>\r\n      No game was found...\r\n    </Typography>\r\n  )\r\n\r\n}\r\n\r\nexport default SingleGame","/Users/test/Documents/coding/game-recommender-frontend/src/components/SinglePost/index.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/SignUpForm.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/graphql/mutations/index.ts",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/SingleGame/CollectionButtons.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/GameLibrary/LibraryList.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/GameLibrary/CategoryFilters.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/PostFeed/index.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/graphql/queries/index.ts",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/SingleGame/RemoveGameButton.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/SingleGame/AddGameButton.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/GameLibrary/LibraryItem.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/PostFeed/PostList.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/PostFeed/NewPost.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/graphql/fragments/index.ts",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/PostFeed/NewPostForm.tsx",["143","144","145"],"import { Box, Button, Checkbox, CircularProgress, Input, LinearProgress, ListItemText, MenuItem, Select, TextField } from '@material-ui/core'\r\nimport { TextField as FormikTextField, Select as FormikSelect } from 'formik-material-ui'\r\nimport { Field, Form } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport { platformIcon } from '../GameLibrary/LibraryItem'\r\nimport { useLazyQuery } from '@apollo/client'\r\nimport { SearchedGamesData, SearchedGamesVars } from '../../types'\r\nimport { SEARCH_GAMES } from '../../graphql/queries'\r\n\r\ninterface FormProps {\r\n  isSubmitting: boolean\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  submitForm: (() => Promise<void>) & (() => Promise<any>)\r\n}\r\n\r\nconst platformOptions = [\r\n  'Xbox',\r\n  'PlayStation',\r\n  'Nintendo',\r\n  'Apple Macintosh',\r\n  'Linux',\r\n  'PC',\r\n  'iOS',\r\n  'Android'\r\n]\r\n\r\nconst NewPostForm: React.FC<FormProps> = ({ isSubmitting, submitForm }) => {\r\n  const [platforms, setPlatforms] = useState<string[]>([])\r\n  const [game, setGame] = useState<string>('')\r\n  const [search, setSearch] = useState<string>('')\r\n  const [searchGames, { loading, data }] = useLazyQuery<SearchedGamesData, SearchedGamesVars>(\r\n    SEARCH_GAMES, {\r\n    variables: { searchTerm: search }\r\n  })\r\n  \r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.preventDefault()\r\n    setSearch(event.target.value)\r\n  }\r\n\r\n  const handleGameChange = (event: React.ChangeEvent<{ value: unknown }>): void => {\r\n    setGame(event.target.value as string)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Field\r\n          component={FormikTextField}\r\n          type='text'\r\n          name='title'\r\n          fullWidth\r\n          label='Post title' />\r\n        <Field\r\n          component={FormikTextField}\r\n          type='text'\r\n          name='text'\r\n          multiline\r\n          fullWidth\r\n          label='Recommendation request (140 characters max)' />\r\n        <Field\r\n          component={FormikSelect}\r\n          multiple\r\n          type='text'\r\n          name='platforms'\r\n          label='Platforms'\r\n          fullWidth\r\n          input={<Input />}\r\n          renderValue={(selected: string[]) => {\r\n            setPlatforms(selected)\r\n            return selected.map(v => (\r\n              <span key={v}>{platformIcon(v)}</span>\r\n            ))\r\n          }}\r\n        >\r\n          {platformOptions.map(platform => (\r\n            <MenuItem key={platform} value={platform}>\r\n              <Checkbox checked={platforms.includes(platform)} />\r\n              <ListItemText primary={platform} />\r\n            </MenuItem>\r\n          ))}\r\n        </Field>\r\n        <Box>\r\n          <TextField\r\n            value={search}\r\n            onChange={handleInputChange}\r\n            label='Search games' />\r\n          <Button onClick={() => searchGames()}>search</Button>\r\n          <Field\r\n            component={FormikSelect}\r\n            name='game'\r\n            label='Similar game'\r\n            type='text'\r\n          >\r\n            {loading && <CircularProgress />}\r\n            {data?.searchGames.results.map(game => (\r\n              <MenuItem key={game.id} value={game.id}>\r\n                <ListItemText primary={game.name} />\r\n              </MenuItem>\r\n            ))}\r\n          </Field>\r\n        </Box>\r\n        {isSubmitting && <LinearProgress />}\r\n        <Button\r\n          color='primary'\r\n          variant='contained'\r\n          onClick={submitForm}\r\n          disabled={isSubmitting}\r\n          type='button'\r\n        >\r\n          Post recommendation request\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewPostForm","/Users/test/Documents/coding/game-recommender-frontend/src/components/PostFeed/PostItem.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/SinglePost/FullPost.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/Searchbar.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/LoginForm.tsx",[],"/Users/test/Documents/coding/game-recommender-frontend/src/components/SinglePost/NewRecommendation.tsx",["146"],"import { useMutation, useQuery } from '@apollo/client'\nimport { Box, CircularProgress, Typography } from '@material-ui/core'\nimport { Formik } from 'formik'\nimport React from 'react'\nimport { FcSalesPerformance } from 'react-icons/fc'\nimport * as yup from 'yup'\nimport { NEW_RECOMMENDATION } from '../../graphql/mutations'\nimport { ME } from '../../graphql/queries'\nimport { Post } from '../../types'\nimport { MeData } from '../Home'\nimport NewRecommendationForm from './NewRecommendationForm'\n\nconst validationSchema = yup.object().shape({\n    game: yup\n        .number()\n        .required('You must choose a game to recommend.'),\n    text: yup\n        .string()\n        .max(200, 'You cannot write more than 200 characters for your recommendation.')\n        .required('You need to tell the original poster why they should play this game.'),\n})\n\ninterface RecommendationFormValues {\n    game: number\n    text: string\n}\nconst initialValues: RecommendationFormValues = {\n    game: -1,\n    text: '',\n}\n\ninterface Props {\n    post: Post\n}\n\nconst NewRecommendation: React.FC<Props> = ({ post }) => {\n    const meResult = useQuery<MeData>(ME)\n    const [newRecommendation] = useMutation(NEW_RECOMMENDATION)\n    if (meResult.loading) return <CircularProgress />\n    const addRecommendation = async (\n        text: string,\n        game: number,\n    ) => {\n        try {\n            const recommendationResult = await newRecommendation({\n                variables: {\n                    username: meResult.data?.me.username,\n                    text,\n                    game,\n                    postId: post._id\n                }\n            })\n            console.log(recommendationResult)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    return (\n        <Box>\n            <Typography variant='h6'>\n                Post a recommendation\n            </Typography>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={async (values, { setSubmitting }) => {\n                    const { text, game } = values\n                    console.log(\"game\", game)\n                    setSubmitting(true)\n                    addRecommendation(text, game)\n                    setSubmitting(false)\n                }}>\n                {({ submitForm, isSubmitting }) => (\n                    <NewRecommendationForm submitForm={submitForm} isSubmitting={isSubmitting} />\n                )}\n            </Formik>\n        </Box>\n    )\n}\n\nexport default NewRecommendation","/Users/test/Documents/coding/game-recommender-frontend/src/components/SinglePost/NewRecommendationForm.tsx",["147","148","149"],"/Users/test/Documents/coding/game-recommender-frontend/src/components/SinglePost/RecommendationItem.tsx",[],{"ruleId":"150","severity":1,"message":"151","line":18,"column":9,"nodeType":"152","messageId":"153","endLine":18,"endColumn":16},{"ruleId":"150","severity":1,"message":"154","line":1,"column":98,"nodeType":"152","messageId":"153","endLine":1,"endColumn":104},{"ruleId":"150","severity":1,"message":"155","line":29,"column":10,"nodeType":"152","messageId":"153","endLine":29,"endColumn":14},{"ruleId":"150","severity":1,"message":"156","line":42,"column":9,"nodeType":"152","messageId":"153","endLine":42,"endColumn":25},{"ruleId":"150","severity":1,"message":"157","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":28},{"ruleId":"158","severity":1,"message":"159","line":11,"column":56,"nodeType":"160","messageId":"161","endLine":11,"endColumn":59,"suggestions":"162"},{"ruleId":"150","severity":1,"message":"155","line":15,"column":12,"nodeType":"152","messageId":"153","endLine":15,"endColumn":16},{"ruleId":"150","severity":1,"message":"163","line":15,"column":18,"nodeType":"152","messageId":"153","endLine":15,"endColumn":25},"@typescript-eslint/no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'Select' is defined but never used.","'game' is assigned a value but never used.","'handleGameChange' is assigned a value but never used.","'FcSalesPerformance' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["164","165"],"'setGame' is assigned a value but never used.",{"messageId":"166","fix":"167","desc":"168"},{"messageId":"169","fix":"170","desc":"171"},"suggestUnknown",{"range":"172","text":"173"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"172","text":"174"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[549,552],"unknown","never"]